{"version":3,"sources":["APIKey.js","components/layout/spinner.gif","components/layout/Navbar.js","components/layout/Footer.js","actions/searchActions.js","actions/types.js","components/home/SearchForm.js","components/home/MovieCard.js","components/home/MoviesContainer.js","components/layout/Spinner.js","components/home/Landing.js","components/home/Movie.js","reducers/searchReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","id","Footer","href","target","setLoading","type","SearchForm","onChange","e","props","searchMovie","value","onSubmit","preventDefault","fetchMovies","text","this","name","placeholder","Component","connect","state","movies","dispatch","payload","axios","get","APIKey","then","response","data","catch","err","console","log","MovieCard","movie","src","Poster","alt","Title","Year","imdbID","MoviesContainer","content","Response","Search","map","index","key","Spinner","spinner","style","width","margin","display","Landing","loading","Movie","fetchMovie","match","params","movieInfo","Type","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","rel","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.603e7191.chunk.js","sourcesContent":["module.exports = {\r\n    'APIKey' : 'a7f82381'\r\n}","module.exports = __webpack_public_path__ + \"static/media/spinner.dbeecda6.gif\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-light app-dark mb-5\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-header\">\r\n                        <Link className=\"navbar-brand  text-lg brand-text\" to=\"/\">\r\n                        MOVIE DICTIONARY\r\n                        </Link>\r\n                    </div>\r\n                    <ul className=\"navbar-nav ml-auto text-light d-inline-block\">\r\n                        <li className=\"nav-item d-inline-block mr-4\">\r\n                            <i className=\"fab fa-imdb fa-5x\" id=\"imdb-logo\"></i>\r\n                        </li>\r\n                        <li className=\"nav-item d-inline-block mr-4\">\r\n                            <i className=\"fab fa-react fa-5x\" id=\"react-logo\"></i>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"footer text-center app-dark text-light\">\r\n                        Developed using  React JS and Redux JS and integrated with external movies data API&nbsp;\r\n                        <a href=\"http://www.omdbapi.com/\" target=\"_blank\">\r\n                            OMDB\r\n                        </a>\r\n                        <div className=\"footer text-center app-dark text-light\">\r\n                            Created by -&nbsp;\r\n                        <span className=\"text-warning font-weight-normal\">\r\n                            Akash Nivrutti Yede\r\n                        </span>\r\n                        </div>\r\n                    </div> \r\n                </div> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from './types';\r\nimport axios from 'axios';\r\n\r\nimport { APIKey } from '../APIKey';\r\n\r\nexport const searchMovie = text => dispatch => {\r\n  dispatch({\r\n    type: SEARCH_MOVIE,\r\n    payload: text\r\n  });\r\n};\r\n\r\nexport const fetchMovies = text => dispatch => {\r\n  axios\r\n    .get(`https://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n    .then(response =>\r\n      dispatch({\r\n        type: FETCH_MOVIES,\r\n        payload: response.data\r\n      })\r\n    )\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const fetchMovie = id => dispatch => {\r\n  axios\r\n    .get(`https://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n    .then(response =>\r\n      dispatch({\r\n        type: FETCH_MOVIE,\r\n        payload: response.data\r\n      })\r\n    )\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: LOADING\r\n  };\r\n};","export const SEARCH_MOVIE = 'SEARCH_MOVIE';\r\nexport const FETCH_MOVIES = 'FETCH_MOVIES';\r\nexport const FETCH_MOVIE = 'FETCH_MOVIE';\r\nexport const LOADING = 'LOADING';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { searchMovie, fetchMovies, setLoading } from '../../actions/searchActions';\r\n\r\nexport class SearchForm extends Component {\r\n  onChange = e => {\r\n    this.props.searchMovie(e.target.value);\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.fetchMovies(this.props.text);\r\n    this.props.setLoading();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"jumbotron jumbotron-fluid jb-style mt-5 text-center\">\r\n        <div className=\"container\">\r\n          <h1 className=\"display-4 mb-3\">\r\n            <i className=\"fa fa-search\" /> Search the Dictionary for Movies and TV series . .\r\n          </h1>\r\n          <form id=\"searchForm\" onSubmit={this.onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"searchText\"\r\n              placeholder=\"Enter keywords or search for something specific\"\r\n              onChange={this.onChange}\r\n            />\r\n            <button type=\"submit\" className=\"btn btn-search btn-bg mt-3\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  text: state.movies.text\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { searchMovie, fetchMovies, setLoading }\r\n)(SearchForm);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class MovieCard extends Component {\r\n  render() {\r\n    const { movie } = this.props;\r\n    return (\r\n      <div className=\"col-md-3 mb-5\">\r\n        <div className=\"card card-body app-dark text-center h-100\">\r\n          <img className=\"w-100 mb-2\" src={movie.Poster} alt=\"Movie Cover\" />\r\n          <h5 className=\"text-light card-title\">\r\n            {movie.Title} - {movie.Year}\r\n          </h5>\r\n          <Link className=\"btn btn-primary\" to={'/movie/' +movie.imdbID}>\r\n            Movie Details&nbsp;\r\n            <i className=\"fas fa-chevron-right\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieCard;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport MovieCard from './MovieCard';\r\n\r\nexport class MoviesContainer extends Component {\r\n  render() {\r\n    const { movies } = this.props;\r\n    let content = '';\r\n\r\n    content = movies.Response === 'True' ? movies.Search.map((movie, index) => (\r\n            <MovieCard key={index} movie={movie} />)): null;\r\n    return <div className=\"row\">{content}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.movies.movies\r\n});\r\n\r\nexport default connect(mapStateToProps)(MoviesContainer);","import React from 'react'\r\nimport spinner from './spinner.gif'\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n        alt=\"Loading...\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner","\r\nimport React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport SearchForm from './SearchForm';\r\nimport MoviesContainer from './MoviesContainer';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nexport class Landing extends Component {\r\n  render() {\r\n    const { loading } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <SearchForm />\r\n        {loading ? <Spinner /> : <MoviesContainer />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.movies.loading\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { fetchMovie, setLoading } from '../../actions/searchActions';\r\n\r\nimport Spinner from '../layout/Spinner';\r\n\r\nexport class Movie extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchMovie(this.props.match.params.id);\r\n    this.props.setLoading();\r\n  }\r\n  render() {\r\n    const { loading, movie } = this.props;\r\n\r\n    let movieInfo = (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 card card-body\">\r\n            <img src={movie.Poster} className=\"thumbnail\" alt=\"Poster\" />\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <h2 className=\"mb-4\">{movie.Title}</h2>\r\n            <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">\r\n                <strong>Type:</strong> {movie.Type}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Genre:</strong> {movie.Genre}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Released:</strong> {movie.Released}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Rated:</strong> {movie.Rated}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>IMDB Rating:</strong> {movie.imdbRating}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Director:</strong> {movie.Director}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Writer:</strong> {movie.Writer}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Actors:</strong> {movie.Actors}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"card card-body app-dark my-5 text-light\">\r\n            <div className=\"col-md-12\">\r\n              <h3>About </h3>\r\n              {movie.Plot}\r\n              <hr />\r\n              <a\r\n                href={'https://www.imdb.com/title/' + movie.imdbID}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-primary\"\r\n              >\r\n                View on IMDB\r\n              </a>\r\n              <Link to=\"/\" className=\"btn btn-default text-light\">\r\n                Go Back To Search\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    let content = loading ? <Spinner /> : movieInfo;\r\n    return <div>{content}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.movies.loading,\r\n  movie: state.movies.movie\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchMovie, setLoading }\r\n)(Movie);","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from '../actions/types';\r\n  \r\nconst initialState = {\r\n  text: '',\r\n  movies: [],\r\n  loading: false,\r\n  movie: []\r\n};\r\n  \r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SEARCH_MOVIE:\r\n      return {\r\n        ...state,\r\n        text: action.payload,\r\n        loading: false\r\n      };\r\n    case FETCH_MOVIES:\r\n      return {\r\n        ...state,\r\n        movies: action.payload,\r\n        loading: false\r\n      };\r\n    case FETCH_MOVIE:\r\n      return {\r\n        ...state,\r\n        movie: action.payload,\r\n        loading: false\r\n      };\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import {combineReducers} from 'redux';\r\nimport searchReducer from './searchReducer';\r\n\r\nexport default combineReducers({\r\n    movies:searchReducer\r\n});","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\r\nimport rootReducer from './reducers';\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\n//const Store = createStore(rootReducer,initialState,composeWithDevTools(applyMiddleware(...middleWare)));\r\n\r\nconst store = createStore(rootReducer,initialState,composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport Navbar from './components/layout/Navbar';\nimport Footer from './components/layout/Footer';\nimport Landing from './components/home/Landing';\nimport Movie from './components/home/Movie';\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/movie/:id\" component={Movie} />\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}